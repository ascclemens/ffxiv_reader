use std::fmt::{Debug, Display, Formatter};
use std::fmt::Result as FmtResult;

#[derive(Debug, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "snake_case")]
pub enum MessageType {
  None,
  Debug,
  UrgentInformation,
  GeneralInformation,
  Say,
  Shout,
  Tell,
  TellReceive,
  Party,
  Alliance,
  Linkshell1,
  Linkshell2,
  Linkshell3,
  Linkshell4,
  Linkshell5,
  Linkshell6,
  Linkshell7,
  Linkshell8,
  FreeCompany,
  NoviceNetwork,
  CustomEmotes,
  StandardEmotes,
  Yell,
  Party2,
  Damage,
  FailedAttacks,
  Actions,
  Items,
  HealingMagic,
  BeneficialEffects,
  DetrimentalEffects,
  Echo,
  SystemMessages,
  SystemErrorMessages,
  BattleSystemMessages,
  GatheringSystemMessages,
  NpcSay,
  LootNotices,
  CharacterProgress,
  LootMessages,
  CraftingMessages,
  GatheringMessages,
  NpcAnnouncements,
  FcAnnouncements,
  FcLoginMessages,
  RetainerSaleReports,
  PartySearchInfo,
  SignSettings,
  DiceRolls,
  MusicChange,
  NoviceNetworkNotifications,
  GmTell,
  GmSay,
  GmShout,
  GmYell,
  GmParty,
  GmFreeCompany,
  GmLinkshell1,
  GmLinkshell2,
  GmLinkshell3,
  GmLinkshell4,
  GmLinkshell5,
  GmLinkshell6,
  GmLinkshell7,
  GmLinkshell8,
  BattleReceiveDamage,
  BattleResistDebuff,
  BattleCast,
  ReadyItem,
  BattleGainBuff,
  BattleSelfAbsorb,
  BattleSufferDebuff,
  BattleLoseBuff,
  BattleRecoverDebuff,
  TrialUpdate,
  BattleDeath,
  GainMgp,
  Unknown(u8)
}

impl Display for MessageType {
  fn fmt(&self, f: &mut Formatter) -> FmtResult {
    Debug::fmt(self, f)
  }
}

impl From<u8> for MessageType {
  fn from(u: u8) -> MessageType {
    match u {
      0 => MessageType::None,
      1 => MessageType::Debug,
      2 => MessageType::UrgentInformation,
      3 => MessageType::GeneralInformation,
      10 => MessageType::Say,
      11 => MessageType::Shout,
      12 => MessageType::Tell,
      13 => MessageType::TellReceive,
      14 => MessageType::Party,
      15 => MessageType::Alliance,
      16 => MessageType::Linkshell1,
      17 => MessageType::Linkshell2,
      18 => MessageType::Linkshell3,
      19 => MessageType::Linkshell4,
      20 => MessageType::Linkshell5,
      21 => MessageType::Linkshell6,
      22 => MessageType::Linkshell7,
      23 => MessageType::Linkshell8,
      24 => MessageType::FreeCompany,
      27 => MessageType::NoviceNetwork,
      28 => MessageType::CustomEmotes,
      29 => MessageType::StandardEmotes,
      30 => MessageType::Yell,
      32 => MessageType::Party2,
      41 => MessageType::Damage,
      42 => MessageType::FailedAttacks,
      43 => MessageType::Actions,
      44 => MessageType::Items,
      45 => MessageType::HealingMagic,
      46 => MessageType::BeneficialEffects,
      47 => MessageType::DetrimentalEffects,
      56 => MessageType::Echo,
      57 => MessageType::SystemMessages,
      58 => MessageType::BattleSystemMessages,
      59 => MessageType::GatheringSystemMessages,
      60 => MessageType::SystemErrorMessages,
      61 => MessageType::NpcSay,
      62 => MessageType::LootNotices,
      64 => MessageType::CharacterProgress,
      65 => MessageType::LootMessages,
      66 => MessageType::CraftingMessages,
      67 => MessageType::GatheringMessages,
      68 => MessageType::NpcAnnouncements,
      69 => MessageType::FcAnnouncements,
      70 => MessageType::FcLoginMessages,
      71 => MessageType::RetainerSaleReports,
      72 => MessageType::PartySearchInfo,
      73 => MessageType::SignSettings,
      74 => MessageType::DiceRolls,
      75 => MessageType::NoviceNetworkNotifications,
      76 => MessageType::MusicChange,
      80 => MessageType::GmTell,
      81 => MessageType::GmSay,
      82 => MessageType::GmShout,
      83 => MessageType::GmYell,
      84 => MessageType::GmParty,
      85 => MessageType::GmFreeCompany,
      86 => MessageType::GmLinkshell1,
      87 => MessageType::GmLinkshell2,
      88 => MessageType::GmLinkshell3,
      89 => MessageType::GmLinkshell4,
      90 => MessageType::GmLinkshell5,
      91 => MessageType::GmLinkshell6,
      92 => MessageType::GmLinkshell7,
      93 => MessageType::GmLinkshell8,
      169 => MessageType::BattleReceiveDamage,
      170 => MessageType::BattleResistDebuff,
      171 => MessageType::BattleCast,
      172 => MessageType::ReadyItem,
      174 => MessageType::BattleGainBuff,
      173 => MessageType::BattleSelfAbsorb,
      175 => MessageType::BattleSufferDebuff,
      176 => MessageType::BattleLoseBuff,
      177 => MessageType::BattleRecoverDebuff,
      185 => MessageType::TrialUpdate,
      186 => MessageType::BattleDeath,
      190 => MessageType::GainMgp,
      _ => MessageType::Unknown(u)
    }
  }
}
